#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Completion
autoload -U +X bashcompinit && bashcompinit
## stack
eval "$(stack --bash-completion-script "$(which stack)")"

# Aliases
## git
alias git="hub"
alias g="git"
alias ga="git add"
alias gc="git commit"
alias gco="git checkout"
alias gst="git status"
alias gp="git push"
alias gpu="git pull"
unalias gs
function gcd () {
    cd $(git rev-parse --show-toplevel)
}

## tmux
alias tatt="tmux attach -t"
alias tls="tmux ls"

## stack
alias sb="stack build"

## misc
alias ...="cd ../.."
alias t="$HOME/bin/t.py --task-dir $HOME/tasks --list TODO --delete-if-empty"
alias tm="$HOME/bin/t.py --task-dir $HOME/tasks --list MOVIES --delete-if-empty"
alias yb="youtube-dl"
alias m="make"
alias vim-update="vim +PlugUpgrade +PlugUpdate"
alias whofap="git ls-tree --name-only -z -r HEAD | grep -z -Z -E '\.(c|h|cpp|hpp|tpp|glsl|hs)$'|xargs -0 -n1 git blame --line-porcelain | grep '^author '| sort | uniq -c | sort -nr"

# Variables
## PATH
export PATH="$HOME/bin:$PATH"

### stack
export PATH="$HOME/.local/bin:$PATH"
# export PATH="$HOME/.stack/programs/x86_64-linux/ghc-7.10.2/bin:$PATH"
export PATH="$HOME/.stack/programs/x86_64-linux/ghcjs-0.2.0.20151001_ghc-7.10.2/bin:$PATH"

## CGAL
export CGAL_DIR="$HOME/projets/cgal/master"
export PATH="$CGAL_DIR/Scripts/developer_scripts:$PATH"
export PATH="$CGAL_DIR/Scripts/scripts:$PATH"

## nesdev
export NESDEV_ROOT="$HOME/dev/c/nes"
export PATH="$NESDEV_ROOT/bin:$PATH"

# Custom functions
## Toggle proxy
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"

    if (( $# > 0 )); then
        valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        if [[ $valid != $@ ]]; then
            >&2 echo "Invalid address"
            return 1
        fi

        export http_proxy="http://$1/"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        echo "Proxy environment variable set."
        return 0
    fi

    echo -n "username: "; read username
    if [[ $username != "" ]]; then
        echo -n "password: "
        read -es password
        local pre="$username:$password@"
    fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    export HTTP_PROXY=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export FTP_PROXY=$http_proxy
    export RSYNC_PROXY=$http_proxy
}

function proxy_off(){
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
    unset rsync_proxy
    echo -e "Proxy environment variable removed."
}

## Proxy variables (only if the Ethernet cable is plugged in)
ifup=$(ip link show enp5s0f1 up | grep " UP ")
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/credentials/proxy.sh" ]] && [[ -n "$ifup" ]]; then
    source "${ZDOTDIR:-$HOME}/.zprezto/credentials/proxy.sh"
fi

